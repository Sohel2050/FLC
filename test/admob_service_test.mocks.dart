// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_chess_app/test/admob_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i6;

import 'package:flutter_chess_app/models/admob_config_model.dart' as _i4;
import 'package:flutter_chess_app/models/user_model.dart' as _i5;
import 'package:flutter_chess_app/providers/admob_provider.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AdMobProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdMobProvider extends _i1.Mock implements _i2.AdMobProvider {
  MockAdMobProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get isInterstitialAdLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isInterstitialAdLoading),
            returnValue: false,
          )
          as bool);

  @override
  bool get isAdsEnabled =>
      (super.noSuchMethod(Invocation.getter(#isAdsEnabled), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i3.Future<void> loadAdMobConfig() =>
      (super.noSuchMethod(
            Invocation.method(#loadAdMobConfig, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateAdMobConfig(_i4.AdMobConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#updateAdMobConfig, [config]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Stream<_i4.AdMobConfig?> getAdMobConfigStream() =>
      (super.noSuchMethod(
            Invocation.method(#getAdMobConfigStream, []),
            returnValue: _i3.Stream<_i4.AdMobConfig?>.empty(),
          )
          as _i3.Stream<_i4.AdMobConfig?>);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  bool shouldShowAds(bool? userRemoveAds) =>
      (super.noSuchMethod(
            Invocation.method(#shouldShowAds, [userRemoveAds]),
            returnValue: false,
          )
          as bool);

  @override
  void setInterstitialAdLoading(bool? loading) => super.noSuchMethod(
    Invocation.method(#setInterstitialAdLoading, [loading]),
    returnValueForMissingStub: null,
  );

  @override
  bool shouldShowAppLaunchAd(bool? userRemoveAds) =>
      (super.noSuchMethod(
            Invocation.method(#shouldShowAppLaunchAd, [userRemoveAds]),
            returnValue: false,
          )
          as bool);

  @override
  bool shouldShowAppLaunchAdForGuestUser(_i5.ChessUser? user) =>
      (super.noSuchMethod(
            Invocation.method(#shouldShowAppLaunchAdForGuestUser, [user]),
            returnValue: false,
          )
          as bool);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
